### Spring core properties ########

spring.application.name=api-rest-with-security-demo

###################################

### Spring security properties ####

spring.security.user.name=admin
spring.security.user.password=admin

###################################

### Actuator properties ###########

management.endpoints.web.exposure.include=health,info,beans,mappings,threaddump

###################################

### Data access properties ########

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=sa
spring.datasource.password=password

# Configure the JPA/Hibernate to auto create the tables
# Possible values are: none, validate, update, create-drop
# Spring Boot chooses a default value for you based on whether it thinks your database is embedded (default create-drop) or not (default none).
# An embedded database is detected by looking at the Connection type: hsqldb, h2 and derby are embedded, the rest are not.
spring.jpa.hibernate.ddl-auto=validate

# The H2 console is implemented as a Jakarta Servlet. You'll always need a servlet container like Tomcat or Jetty to run it.
# So You need to add Spring Web if you want the H2 console.

# H2 database has an embedded GUI console for browsing the contents of a database and running SQL queries. By default,
# the H2 console is not enabled in Spring, to enable it, we need to add the following property
spring.h2.console.enabled=true
# Path at which the console will be available - http://localhost:8080/h2-console/
spring.h2.console.path=/h2-console

#spring.sql.init.schema-locations=classpath:sql/security-schema.sql
#spring.sql.init.data-locations=classpath:sql/security-data.sql
spring.sql.init.schema-locations=classpath:sql/custom-security-schema.sql
spring.sql.init.data-locations=classpath:sql/custom-security-data.sql
###################################

### Logging properties ############

logging.level.org.springframework.security=DEBUG

###################################